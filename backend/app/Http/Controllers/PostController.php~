<?php

namespace App\Http\Controllers;

use App\Models\Post;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;

class PostController extends Controller
{
    // Get a paginated list of posts (e.g., a feed)
    public function index()
    {
        // Get the IDs of the user's friends
        $friendIds = Auth::user()->friends()->pluck('id');

        // Fetch posts from friends and the user themselves
        $posts = Post::whereIn('user_id', $friendIds)
            ->orWhere('user_id', Auth::id())
            ->with('user')
            ->latest()
            ->paginate(10);

        // Return the posts as JSON
        return response()->json($posts);
    }

    // Create a new post
    public function store(Request $request)
    {
        $validated = $request->validate([
            'content' => 'required|string',
            'media_url' => 'nullable|string',
        ]);

        $post = Post::create([
            'user_id' => Auth::id(),
            'content' => $validated['content'],
            'media_url' => $validated['media_url'] ?? null,
        ]);

        return response()->json($post, 201);
    }

    // Show a specific post
    public function show($id)
    {
        $post = Post::with('user')->findOrFail($id);
        return response()->json($post);
    }

    // Update a post
    public function update(Request $request, $id)
    {
        $post = Post::findOrFail($id);

        if ($post->user_id !== Auth::id()) {
            return response()->json(['error' => 'Unauthorized'], 403);
        }

        $validated = $request->validate([
            'content' => 'required|string',
            'media_url' => 'nullable|string',
        ]);

        $post->update($validated);

        return response()->json($post);
    }

    // Delete a post
    public function destroy($id)
    {
        $post = Post::findOrFail($id);

        if ($post->user_id !== Auth::id()) {
            return response()->json(['error' => 'Unauthorized'], 403);
        }

        $post->delete();

        return response()->json(['message' => 'Post deleted']);
    }
}
