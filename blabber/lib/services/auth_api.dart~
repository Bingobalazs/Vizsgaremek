import 'package:http/http.dart' as http;
import 'package:flutter_secure_storage/flutter_secure_storage.dart';
import 'dart:convert';

class AuthService {
  final storage = const FlutterSecureStorage();
  final String baseUrl = 'https://kovacscsabi.moriczcloud.hu/api';

  // Login
  Future<bool> login(String email, String password) async {
    try {
      final response = await http.post(
        Uri.parse('$baseUrl/login'),
        headers: {
          'Content-Type': 'application/json',
        },
        body: jsonEncode({
          'email': email,
          'password': password,
        }),
      );

      if (response.statusCode == 200) {
        final data = jsonDecode(response.body);
        // Token mentése
        await storage.write(
          key: 'auth_token',
          value: data['access_token'],
        );
        return true;
      }
      return false;
    } catch (e) {
      print('Login error: $e');
      return false;
    }
  }

  // Autentikált GET kérés
  Future<Map<String, dynamic>> getAuthenticatedData(String endpoint) async {
    try {
      final token = await storage.read(key: 'auth_token');

      final response = await http.get(
        Uri.parse('$baseUrl/$endpoint'),
        headers: {
          'Authorization': 'Bearer $token',
          'Content-Type': 'application/json',
        },
      );

      if (response.statusCode == 200) {
        return jsonDecode(response.body);
      }
      throw Exception('Failed to load data');
    } catch (e) {
      print('Request error: $e');
      throw Exception('Failed to load data');
    }
  }

  // Autentikált POST kérés
  Future<Map<String, dynamic>> postAuthenticatedData(String endpoint, Map<String, dynamic> data) async {
    try {
      final token = await storage.read(key: 'auth_token');

      final response = await http.post(
        Uri.parse('$baseUrl/$endpoint'),
        headers: {
          'Authorization': 'Bearer $token',
          'Content-Type': 'application/json',
        },
        body: jsonEncode(data),
      );

      if (response.statusCode == 200) {
        return jsonDecode(response.body);
      }
      throw Exception('Failed to post data');
    } catch (e) {
      print('Request error: $e');
      throw Exception('Failed to post data');
    }
  }

  // Logout
  Future<void> logout() async {
    try {
      final token = await storage.read(key: 'auth_token');

      // Backend értesítése (opcionális)
      await http.post(
        Uri.parse('$baseUrl/logout'),
        headers: {
          'Authorization': 'Bearer $token',
          'Content-Type': 'application/json',
        },
      );

      // Token törlése
      await storage.delete(key: 'auth_token');
    } catch (e) {
      print('Logout error: $e');
    }
  }
}